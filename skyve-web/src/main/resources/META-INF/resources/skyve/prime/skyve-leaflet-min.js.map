{
"version":3,
"file":"../skyve-web/src/main/resources/META-INF/resources/skyve/prime/skyve-leaflet-min.js",
"lineCount":8,
"mappings":"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",
"sources":["src/js/prime/skyve-leaflet.js"],
"sourcesContent":["SKYVE.BizMap = function() {\n\tvar displays = {};\n\n\tvar refresh = function(display, fit) {\n\t\t// NB can't check if the refresh is switched off here as we need it to fire always for lazy loading\n\t\tif (display._refreshing) { // already triggered a refresh - waiting on XHR response\n\t\t\treturn;\n\t\t}\n\n\t\t// ensure that only 1 refresh at a time occurs\n\t\tdisplay._refreshing = true;\n\n\t\tvar extents = '';\n\t\tif (display.loading === 'lazy') {\n\t\t\tvar bounds = display.webmap.wrapLatLngBounds(display.webmap.getBounds());\n\t\t\tif (bounds) {\n\t\t\t\tvar point = bounds.getNorthEast();\n\t\t\t\textents = '&_ne=POINT(' + point.lng + ' ' + point.lat + ')';\n\t\t\t\tpoint = bounds.getSouthWest();\n\t            extents += '&_sw=POINT(' + point.lng + ' ' + point.lat + ')';\n\t\t\t}\n\t\t}\n\t\t$.get(display.url + extents, function(data) {\n\t\t\ttry {\n\t\t\t\tSKYVE.Leaflet.scatter(display, data, fit, true);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tdisplay._refreshing = false;\n\t\t\t}\n\t\t});\n\t};\n\n\t// public\n\treturn {\n\t\tcreate: function(options) {\n\t\t\tvar mapOptions = {\n\t\t\t\tzoom: 1,\n\t\t\t\tcenter: [0, 0],\n\t\t\t\tfullscreenControl: {\n\t\t\t\t\tpseudoFullscreen: false\n\t\t\t\t},\n\t\t\t    layers: eval(SKYVE.Util.mapLayers)\n\t\t\t};\n\n\t\t\tvar display = displays[options.elementId];\n\t\t\tif (display) {\n\t\t\t\tif (display.webmap) {\n\t\t\t\t\tmapOptions.zoom = display.webmap.getZoom();\n\t\t\t\t\tmapOptions.center = display.webmap.getCenter();\n\t\t\t\t}\n\t\t\t\tif (display._intervalId) {\n\t\t\t\t\tclearInterval(display._intervalId);\n\t\t\t\t\tdisplay._intervalId = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay = {\n\t\t\t\t\t_objects: null,\n\t\t\t\t\trefreshTime: options.refreshTime,\n\t\t\t\t\tloading: options.loading, // lazy or eager\n\t\t\t\t\t_refreshRequired: true, // set via the map UI\n\t\t\t\t\t_refreshing: false, // stop multiple refreshes\n\t\t\t\t\t_intervalId: null, // the interval to stop on refresh checkbox click\n\t\t\t\t\tclick: function(layer) {\n\t\t\t\t\t\treturn SKYVE.BizMap.click(this, layer);\n\t\t\t\t\t},\n\t\t\t\t\trerender: function() {\n\t\t\t\t\t\trefresh(this, false);\n\t\t\t\t\t},\n\t\t\t\t\tmoduleName: options.moduleName,\n\t\t\t\t\tqueryName: options.queryName,\n\t\t\t\t\tgeometryBinding: options.geometryBinding,\n\t\t\t\t\tdocumentName: options.documentName,\n\t\t\t\t\tmodelName: options.modelName\n\t\t\t\t};\n\t\t\t\tdisplays[options.elementId] = display;\n\t\t\t}\n\n\t\t\t// if there is an entry in session storage, use it\n\t\t\tvar inSessionStorage = false;\n\t\t\tif (display.documentName) {\n\t\t\t\tvar key = display.moduleName + '_' + display.documentName + '_' + display.modelName;\n\t\t\t\tvar value = sessionStorage.getItem(key);\n\t\t\t\tif (value) {\n\t\t\t\t\tinSessionStorage = true;\n\t\t\t\t\tvar settings = JSON.parse(value);\n\t\t\t\t\tmapOptions.center = settings.centre;\n\t\t\t\t\tmapOptions.zoom = settings.zoom;\n\t\t\t\t\tsessionStorage.removeItem(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar key = display.moduleName + '_' + display.queryName + '_' + display.geometryBinding;\n\t\t\t\tvar value = sessionStorage.getItem(key);\n\t\t\t\tif (value) {\n\t\t\t\t\tinSessionStorage = true;\n\t\t\t\t\tvar settings = JSON.parse(value);\n\t\t\t\t\tmapOptions.center = settings.centre;\n\t\t\t\t\tmapOptions.zoom = settings.zoom;\n\t\t\t\t\tsessionStorage.removeItem(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisplay._objects = {}; // if we are building a new map, there will be no layers, so clear our state\n\t\t\tdisplay.webmap = L.map(SKYVE.PF.getByIdEndsWith(options.elementId)[0], mapOptions);\n\n\t\t\tif (options.showRefresh) {\n\t\t\t\tSKYVE.Leaflet.refreshControls(display);\n\t\t\t}\n\t\t\tif (options.loading === 'lazy') {\n\t\t\t\tdisplay.webmap.on('zoomend', function(event) {\n\t\t\t\t\tif (! display._refreshing) { // don't refresh if fitting bounds in a refresh already\n\t            \t\trefresh(display, false);\n\t            \t}\n\t\t\t\t});\n\t\t\t\tdisplay.webmap.on('moveend', function(event) {\n\t            \trefresh(display, false);\n\t            });\n\t\t\t}\n\t\t\tvar url = SKYVE.Util.CONTEXT_URL + 'map?';\n\t\t\tif (options.modelName) {\n\t\t\t\turl += '_c=' + options._c + '&_m=' + options.modelName;\n\t\t\t}\n\t\t\telse if (options.queryName) {\n\t\t\t\turl += '_mod=' + options.moduleName + '&_q=' + options.queryName + '&_geo=' + options.geometryBinding;\n\t\t\t}\n\t\t\tdisplay.url = url;\n\t\t\trefresh(display, (! inSessionStorage)); // fit to bounds if not in sessionStorage\n\n\t\t\tif ((display.refreshTime > 0) && display._refreshRequired) {\n\t\t\t\tdisplay._intervalId = setInterval(display.rerender.bind(display), display.refreshTime * 1000);\n\t\t\t}\n\t\t\t\n\t\t\treturn display;\n\t\t},\n\t\t\n\t\tget: function(elementId) {\n\t\t\treturn displays[elementId];\n\t\t},\n\t\t\n\t\tclick: function(display, layer) {\n\t\t\tif (display.documentName) {\n\t\t\t\tsessionStorage.setItem(display.moduleName + '_' + display.documentName + '_' + display.modelName,\n\t\t\t\t\t\t\t\t\t\t'{\"centre\":' + JSON.stringify(display.webmap.getCenter()) + \n\t\t\t\t\t\t\t\t\t\t\t',\"zoom\":' + display.webmap.getZoom() + '}');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsessionStorage.setItem(display.moduleName + '_' + display.queryName + '_' + display.geometryBinding,\n\t\t\t\t\t\t\t\t\t\t'{\"centre\":' + JSON.stringify(display.webmap.getCenter()) + \n\t\t\t\t\t\t\t\t\t\t\t',\"zoom\":' + display.webmap.getZoom() + '}');\n\t\t\t}\n\t\t\t\n\t\t\tvar result = layer.zoomData.infoMarkup;\n\t    \tresult += '<br/><br/><input type=\"button\" value=\"Zoom\" onclick=\"window.location=\\'' + SKYVE.Util.CONTEXT_URL;\n\t\t\tresult += '?m=' + layer.zoomData.mod + '&d=' + layer.zoomData.doc + '&i=' + layer.zoomData.bizId + \"'\\\"/>\";\n\t\t\treturn result;\n\t\t},\n\t\t\n\t\tresizeAll: function() {\n\t\t\tsetTimeout(function() {\n\t\t\t\tfor (var elementId in displays) {\n\t\t\t\t\tdisplays[elementId].webmap.invalidateSize(false);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n}();\n\nSKYVE.BizMapPicker = function() {\n\tvar displays = {};\n\n\t// public\n\treturn {\n\t\tcreate: function(options) {\n\t\t\tvar mapOptions = {\n\t\t\t\tzoom: SKYVE.Util.mapZoom,\n\t\t\t\tcenter: SKYVE.Leaflet.centre(),\n\t\t\t\teditable: true,\n\t\t\t\tfullscreenControl: {\n\t\t\t\t\tpseudoFullscreen: false\n\t\t\t\t},\n                layers: eval(SKYVE.Util.mapLayers)\n\t\t\t};\n\n\t\t\tvar display = displays[options.elementId];\n\t\t\tif (display) {\n\t\t\t\tif (display.webmap) {\n\t\t\t\t\tmapOptions.zoom = display.webmap.getZoom();\n\t\t\t\t\tmapOptions.center = display.webmap.getCenter();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay = {\n\t\t\t\t\t_overlays: [],\n\t\t\t\t\tdrawingTools: options.drawingTools,\n\t\t\t\t\tsetFieldValue: function(wktValue) {\n\t\t\t            var element = SKYVE.PF.getTextElement(elementId + '_value');\n\t\t\t            element.val(wktValue);\n\t\t\t            element.change(); // trigger on change event here for any skyve event handling to occur\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tdisplays[options.elementId] = display;\n\t\t\t}\n\t\t\t\n\t\t\tvar elementId = SKYVE.PF.getByIdEndsWith(options.elementId).attr('id');\n\t\t\tvar mapElement = document.getElementById(elementId);\n\t\t\tif (mapElement.childNodes.length <= 1) { // the map has been instantiated here\n\t\t\t\tdisplay.webmap = L.map(mapElement, mapOptions);\n\n\t\t\t\tif (! options.disabled) {\n\t\t\t\t\tSKYVE.Leaflet.drawingTools(display);\n\t\t\t\t\tSKYVE.Leaflet.geoLocator(display);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n        \tSKYVE.Leaflet.clear(display);\n        \tvar textElement = SKYVE.PF.getTextElement(elementId + '_value')\n\t\t\t// Make text read-only to stop \"change\" events fired every char press\n\t\t\t// as we don't want to send malformed WKT to the server\n        \ttextElement.attr('readonly', true);\n        \tSKYVE.Leaflet.scatterValue(display, textElement.val());\n\t\t},\n\n\t\tresizeAll: function() {\n\t\t\tsetTimeout(function() {\n\t\t\t\tfor (var elementId in displays) {\n\t\t\t\t\tdisplays[elementId].webmap.invalidateSize(false);\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}\n}();\n"],
"names":["SKYVE","BizMap","displays","refresh","display","fit","_refreshing","extents","loading","bounds","webmap","wrapLatLngBounds","getBounds","point","getNorthEast","lng","lat","getSouthWest","$","get","url","data","Leaflet","scatter","create","options","mapOptions","zoom","center","fullscreenControl","pseudoFullscreen","layers","eval","Util","mapLayers","elementId","getZoom","getCenter","_intervalId","clearInterval","_objects","refreshTime","_refreshRequired","click","layer","rerender","moduleName","queryName","geometryBinding","documentName","modelName","inSessionStorage","key","value","sessionStorage","getItem","settings","JSON","parse","centre","removeItem","L","map","PF","getByIdEndsWith","showRefresh","refreshControls","on","event","CONTEXT_URL","_c","setInterval","bind","setItem","stringify","result","zoomData","infoMarkup","mod","doc","bizId","resizeAll","setTimeout","invalidateSize","BizMapPicker","mapZoom","editable","_overlays","drawingTools","setFieldValue","wktValue","element","getTextElement","val","change","attr","mapElement","document","getElementById","childNodes","length","disabled","geoLocator","clear","textElement","scatterValue"]
}
