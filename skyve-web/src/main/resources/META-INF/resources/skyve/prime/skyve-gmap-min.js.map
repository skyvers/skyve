{
"version":3,
"file":"../skyve-web/src/main/resources/META-INF/resources/skyve/prime/skyve-gmap-min.js",
"lineCount":8,
"mappings":"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",
"sources":["src/js/prime/skyve-gmap.js"],
"sourcesContent":["SKYVE.BizMap = function() {\n\tvar displays = {};\n    var wkt = new Wkt.Wkt();\n\n\tvar refresh = function(display, fit) {\n\t\t// NB can't check if the refresh is switched off here as we need it to fire always for lazy loading\n\t\tif (display._refreshing) { // already triggered a refresh - waiting on XHR response\n\t\t\treturn;\n\t\t}\n\n\t\t// ensure that only 1 refresh at a time occurs\n\t\tdisplay._refreshing = true;\n\n\t\tvar extents = '';\n\t\tif (display.loading === 'lazy') {\n\t\t\tvar bounds = display.webmap.getBounds();\n\t\t\tif (bounds) {\n\t            wkt.fromObject(bounds.getNorthEast());\n\t            extents = '&_ne=' + wkt.write();\n\t            wkt.fromObject(bounds.getSouthWest());\n\t            extents += '&_sw=' + wkt.write();\n\t\t\t}\n\t\t}\n\t\t$.get(display.url + extents, function(data) {\n\t\t\ttry {\n\t\t\t\tSKYVE.GMap.scatter(display, data, fit, true);\n\t\t\t}\n\t\t\tfinally {\n\t\t\t\tdisplay._refreshing = false;\n\t\t\t}\n\t\t});\n\t};\n\t\n\t// public\n\treturn {\n\t\tcreate: function(options) {\n\t\t\tvar mapOptions = {\n\t\t\t\tzoom: 1,\n\t\t\t\tcenter: new google.maps.LatLng(0, 0),\n\t\t\t\tmapTypeId: eval(SKYVE.Util.mapLayers)\n\t\t\t};\n\n\t\t\tvar display = displays[options.elementId];\n\t\t\tif (display) {\n\t\t\t\tif (display.webmap) {\n\t\t\t\t\tmapOptions.zoom = display.webmap.getZoom();\n\t\t\t\t\tmapOptions.center = display.webmap.getCenter();\n\t\t\t\t\tmapOptions.mapTypeId = display.webmap.getMapTypeId();\n\t\t\t\t}\n\t\t\t\tif (display._intervalId) {\n\t\t\t\t\tclearInterval(display._intervalId);\n\t\t\t\t\tdisplay._intervalId = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay = {\n\t\t\t\t\t_objects: null,\n\t\t\t\t\trefreshTime: options.refreshTime,\n\t\t\t\t\tloading: options.loading, // lazy or eager\n\t\t\t\t\t_refreshRequired: true, // set via the map UI\n\t\t\t\t\t_refreshing: false, // stop multiple refreshes\n\t\t\t\t\t_intervalId: null, // the interval to stop on refresh checkbox click\n\t\t\t\t\tclick: function(overlay, event) {\n\t\t\t\t\t\tSKYVE.BizMap.click(this, overlay, event);\n\t\t\t\t\t},\n\t\t\t\t\trerender: function() {\n\t\t\t\t\t\trefresh(this, false);\n\t\t\t\t\t},\n\t\t\t\t\tmoduleName: options.moduleName,\n\t\t\t\t\tqueryName: options.queryName,\n\t\t\t\t\tgeometryBinding: options.geometryBinding,\n\t\t\t\t\tdocumentName: options.documentName,\n\t\t\t\t\tmodelName: options.modelName\n\t\t\t\t};\n\t\t\t\tdisplays[options.elementId] = display;\n\t\t\t}\n\n\t\t\t// if there is an entry in session storage, use it\n\t\t\tvar inSessionStorage = false;\n\t\t\tif (display.documentName) {\n\t\t\t\tvar key = display.moduleName + '_' + display.documentName + '_' + display.modelName;\n\t\t\t\tvar value = sessionStorage.getItem(key);\n\t\t\t\tif (value) {\n\t\t\t\t\tinSessionStorage = true;\n\t\t\t\t\tvar settings = JSON.parse(value);\n\t\t\t\t\tmapOptions.center = settings.centre;\n\t\t\t\t\tmapOptions.zoom = settings.zoom;\n\t\t\t\t\tsessionStorage.removeItem(key);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar key = display.moduleName + '_' + display.queryName + '_' + display.geometryBinding;\n\t\t\t\tvar value = sessionStorage.getItem(key);\n\t\t\t\tif (value) {\n\t\t\t\t\tinSessionStorage = true;\n\t\t\t\t\tvar settings = JSON.parse(value);\n\t\t\t\t\tmapOptions.center = settings.centre;\n\t\t\t\t\tmapOptions.zoom = settings.zoom;\n\t\t\t\t\tsessionStorage.removeItem(key);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisplay._objects = {}; // if we are building a new map, there will be no overlays, so clear our state\n\t\t\tdisplay.infoWindow = new google.maps.InfoWindow({content: ''});\n\t\t\tdisplay.webmap = new google.maps.Map(SKYVE.PF.getByIdEndsWith(options.elementId)[0], mapOptions);\n\n\t\t\tif (options.showRefresh) {\n\t\t\t\tSKYVE.GMap.refreshControls(display);\n\t\t\t}\n\n\t\t\tif (options.loading === 'lazy') {\n\t\t\t\tgoogle.maps.event.addListener(display.webmap, 'zoom_changed', function() {\n\t\t\t\t\tif (! display._refreshing) {  // dont refresh if fitting bounds in a refresh already\n\t\t\t\t\t\trefresh(display, false);\n\t\t\t\t\t}\n\t            });\n\t    \t    google.maps.event.addListener(display.webmap, 'dragend', function() {\n\t    \t    \trefresh(display, false);\n\t            });\n\t\t\t}\n\t\t\tvar url = SKYVE.Util.CONTEXT_URL + 'map?';\n\t\t\tif (options.modelName) {\n\t\t\t\turl += '_c=' + options._c + '&_m=' + options.modelName;\n\t\t\t}\n\t\t\telse if (options.queryName) {\n\t\t\t\turl += '_mod=' + options.moduleName + '&_q=' + options.queryName + '&_geo=' + options.geometryBinding;\n\t\t\t}\n\t\t\tdisplay.url = url;\n\t\t\trefresh(display, (! inSessionStorage)); // fit to bounds if not in sessionStorage\n\n\t\t\tif ((display.refreshTime > 0) && display._refreshRequired) {\n\t\t\t\tdisplay._intervalId = setInterval(display.rerender.bind(display), display.refreshTime * 1000);\n\t\t\t}\n\t\t\t\n\t\t\treturn display;\n\t\t},\n\t\t\n\t\tget: function(elementId) {\n\t\t\treturn displays[elementId];\n\t\t},\n\t\t\n\t\tclick: function(display, overlay, event) {\n\t\t\tif (display.documentName) {\n\t\t\t\tsessionStorage.setItem(display.moduleName + '_' + display.documentName + '_' + display.modelName,\n\t\t\t\t\t\t\t\t\t\t'{\"centre\":' + JSON.stringify(display.webmap.getCenter().toJSON()) + \n\t\t\t\t\t\t\t\t\t\t\t',\"zoom\":' + display.webmap.getZoom() + '}');\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsessionStorage.setItem(display.moduleName + '_' + display.queryName + '_' + display.geometryBinding,\n\t\t\t\t\t\t\t\t\t\t'{\"centre\":' + JSON.stringify(display.webmap.getCenter().toJSON()) + \n\t\t\t\t\t\t\t\t\t\t\t',\"zoom\":' + display.webmap.getZoom() + '}');\n\t\t\t}\n\t\t\t\n\t\t\tvar contents = overlay.infoMarkup;\n\t    \tcontents += '<br/><br/><input type=\"button\" value=\"Zoom\" onclick=\"window.location=\\'' + SKYVE.Util.CONTEXT_URL;\n\t\t\tcontents += '?m=' + overlay.mod + '&d=' + overlay.doc + '&i=' + overlay.bizId + \"'\\\"/>\";\n\t    \tif (overlay.getPosition) {\n\t\t\t\tdisplay.infoWindow.open(display.webmap, overlay);\n\t    \t\tdisplay.infoWindow.setContent(contents);\n\t    \t}\n\t    \telse if (overlay.getPath) {\n\t\t\t\tdisplay.infoWindow.setPosition(event.latLng);\n\t    \t\tdisplay.infoWindow.open(display.webmap);\n\t    \t\tdisplay.infoWindow.setContent(contents);\n\t    \t}\n\t    },\n\n\t\tresizeAll: function() {\n\t\t\t// not sure if we need this or not\n\t\t}\n\t}\n}();\n\nSKYVE.BizMapPicker = function() {\n\tvar displays = {};\n    var wkt = new Wkt.Wkt();\n\n\t// public\n\treturn {\n\t\tcreate: function(options) {\n\t\t\tvar mapOptions = {\n\t\t\t\tzoom: SKYVE.Util.mapZoom,\n\t\t\t\tcenter: SKYVE.GMap.centre(),\n\t\t\t\tmapTypeId: eval(SKYVE.Util.mapLayers),\n\t\t\t\tmapTypeControlOptions: {\n\t            \tstyle: google.maps.MapTypeControlStyle.DROPDOWN_MENU\n\t            }\n\t\t\t};\n\n\t\t\tvar display = displays[options.elementId];\n\t\t\tif (display) {\n\t\t\t\tif (display.webmap) {\n\t\t\t\t\tmapOptions.zoom = display.webmap.getZoom();\n\t\t\t\t\tmapOptions.center = display.webmap.getCenter();\n\t\t\t\t\tmapOptions.mapTypeId = display.webmap.getMapTypeId();\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdisplay = {\n\t\t\t\t\t_overlays: [],\n\t\t\t\t\tsetFieldValue: function(wktValue) {\n\t\t\t            var element = SKYVE.PF.getTextElement(elementId + '_value');\n\t\t\t            element.val(wktValue);\n\t\t\t            element.change(); // trigger on change event here for any skyve event handling to occur\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tdisplays[options.elementId] = display;\n\t\t\t}\n\t\t\t\n\t\t\tvar elementId = SKYVE.PF.getByIdEndsWith(options.elementId).attr('id');\n\t\t\tdisplay.webmap = new google.maps.Map(document.getElementById(elementId), mapOptions);\n\n\t\t\tif (! options.disabled) {\n\t\t\t\tSKYVE.GMap.drawingTools(display);\n\t\t\t\tSKYVE.GMap.geoLocator(display);\n\t\t\t}\n\t\t\t\n        \tSKYVE.GMap.clear(display);\n        \tvar textElement = SKYVE.PF.getTextElement(elementId + '_value')\n\t\t\t// Make text read-only to stop \"change\" events fired every char press\n\t\t\t// as we don't want to send malformed WKT to the server\n        \ttextElement.attr('readonly', true);\n        \tSKYVE.GMap.scatterValue(display, textElement.val());\n\t\t},\n\t\t\n\t\tresizeAll: function() {\n\t\t\t// not sure if we need this or not\n\t\t}\n\t}\n}();\n"],
"names":["SKYVE","BizMap","displays","wkt","Wkt","refresh","display","fit","_refreshing","extents","loading","bounds","webmap","getBounds","fromObject","getNorthEast","write","getSouthWest","$","get","url","data","GMap","scatter","create","options","mapOptions","zoom","center","google","maps","LatLng","mapTypeId","eval","Util","mapLayers","elementId","getZoom","getCenter","getMapTypeId","_intervalId","clearInterval","_objects","refreshTime","_refreshRequired","click","overlay","event","rerender","moduleName","queryName","geometryBinding","documentName","modelName","inSessionStorage","key","value","sessionStorage","getItem","settings","JSON","parse","centre","removeItem","infoWindow","InfoWindow","content","Map","PF","getByIdEndsWith","showRefresh","refreshControls","addListener","CONTEXT_URL","_c","setInterval","bind","setItem","stringify","toJSON","contents","infoMarkup","mod","doc","bizId","getPosition","open","setContent","getPath","setPosition","latLng","resizeAll","BizMapPicker","mapZoom","mapTypeControlOptions","style","MapTypeControlStyle","DROPDOWN_MENU","_overlays","setFieldValue","wktValue","element","getTextElement","val","change","attr","document","getElementById","disabled","drawingTools","geoLocator","clear","textElement","scatterValue"]
}
