<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<document name="SelfRegistration"
          xmlns="http://www.skyve.org/xml/document"
          xsi:schemaLocation="http://www.skyve.org/xml/document ../../../schemas/document.xsd"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
    <singularAlias>Self Registration</singularAlias>
    <pluralAlias>Self Registrations</pluralAlias>
    <bizKey expression="{user}" />
    <attributes>
        <text name="activateUrl" persistent="false" audited="false" trackChanges="false">
            <displayName>admin.selfRegistration.activateUrl.displayName</displayName>
            <length>2083</length>
        </text>
        <text name="confirmEmail" sensitivity="personal">
			<displayName>admin.selfRegistration.confirmEmail.displayName</displayName>
			<length>500</length>
			<validator type="email" />
		</text>
        <text name="confirmPassword" persistent="false" audited="false" trackChanges="true" sensitivity="secret">
            <documentation>Confirm password checked during user registration to bypass change password
                validation in the UserBizlet.</documentation>
            <displayName>admin.selfRegistration.confirmPassword.displayName</displayName>
            <length>30</length>
        </text>
        <text name="loginUrl" persistent="false" audited="false" trackChanges="false">
            <displayName>admin.selfRegistration.loginUrl.displayName</displayName>
            <length>2083</length>
        </text>
        <text name="loginMessage" persistent="false" audited="false" trackChanges="false">
            <documentation>Transient field to allow login message to be overridden</documentation>
            <displayName>admin.selfRegistration.loginMessage.displayName</displayName>
            <length>2000</length>
        </text>
        <dateTime name="registrationDate">
            <documentation>The date and time that this self registration was completed.</documentation>
            <displayName>admin.selfRegistration.registrationDate.displayName</displayName>
        </dateTime>
        <boolean name="passSilently" persistent="false" audited="false" trackChanges="false" usage="view">
			<documentation>Flag used when registration should pass but not actually create a user. 
				Used for suspected bot registrations.</documentation>
			<displayName>Silent Pass</displayName>
			<defaultValue>false</defaultValue>
		</boolean>
        <association name="user" type="aggregation" required="true">
        	<documentation>The new user to create for this registration</documentation>
            <displayName>admin.selfRegistration.association.user.displayName</displayName>
            <documentName>User</documentName>
        </association>
        <text name="previouslyAttemptedPassword" persistent="false" audited="false" trackChanges="false" sensitivity="secret">
			<documentation><![CDATA[
				If checks for breached passwords are enabled, this field is used to track whether a warning has been displayed for this password.
				A user may use a 'breached' password once they confirm by re-submitting.
				Implementation is similar to that in changePassword.jsp & resetPassword.jsp.
			]]></documentation>
			<displayName>Previously Attempted Password</displayName>
			<length>255</length>
		</text>
    </attributes>
    <conditions>
    	<condition name="confirmEmailInvalid" usage="view">
    		<description>True if the entered confirm email address is invalid (does not conform to the regular expression).</description>
    		<expression>((SelfRegistrationExtension)this).confirmEmailInvalid()</expression>
    	</condition>
    	<condition name="emailInvalid" usage="view">
    		<description>True if the entered email address is invalid (does not conform to the regular expression).</description>
    		<expression>((SelfRegistrationExtension)this).emailInvalid()</expression>
    	</condition>	
        <condition name="registrationComplete">
            <description>Whether or not the registration process has finished.</description>
            <expression><![CDATA[getUser() != null && getUser().isPersisted() || Boolean.TRUE.equals(passSilently)]]></expression>
        </condition>
        <condition name="selfRegistrationAllowed">
            <description>Whether or not self registration is allowed.</description>
            <expression>
                <![CDATA[
					org.skyve.impl.util.UtilImpl.ACCOUNT_ALLOW_SELF_REGISTRATION
				]]>
            </expression>
        </condition>
        <condition name="showGoogleRecaptcha">
            <description>Whether to show google recaptcha.</description>
            <expression>
                <![CDATA[
					org.skyve.impl.util.UtilImpl.GOOGLE_RECAPTCHA_SITE_KEY != null
				]]>
            </expression>
        </condition>
        <condition name="showCloudflareTurnstile">
            <description>Whether to show cloudflare turnstile.</description>
            <expression>
                <![CDATA[
					org.skyve.impl.util.UtilImpl.CLOUDFLARE_TURNSTILE_SITE_KEY != null
				]]>
            </expression>
        </condition>
    </conditions>
</document>
