<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN" "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping default-access="field">

	<typedef name="OptimisticLock" class="org.skyve.impl.domain.types.OptimisticLockUserType" />
	<typedef name="Decimal2" class="org.skyve.impl.domain.types.Decimal2UserType" />
	<typedef name="Decimal5" class="org.skyve.impl.domain.types.Decimal5UserType" />
	<typedef name="Decimal10" class="org.skyve.impl.domain.types.Decimal10UserType" />
	<typedef name="DateOnly" class="org.skyve.impl.domain.types.DateOnlyUserType" />
	<typedef name="DateTime" class="org.skyve.impl.domain.types.DateTimeUserType" />
	<typedef name="TimeOnly" class="org.skyve.impl.domain.types.TimeOnlyUserType" />
	<typedef name="Timestamp" class="org.skyve.impl.domain.types.TimestampUserType" />
	<typedef name="Enum" class="org.skyve.impl.domain.types.EnumUserType" />
	<class name="modules.test.domain.AllAttributesPersistent" table="TEST_AllAttributesPersistent" entity-name="testAllAttributesPersistent">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<many-to-one name="aggregatedAssociation" entity-name="testAllAttributesPersistent" column="aggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_AllAttributesPersistent_aggregatedAssociation"/>
		<many-to-one name="composedAssociation" entity-name="testAllAttributesPersistent" column="composedAssociation_id" unique="true" cascade="persist,save-update,refresh,delete-orphan,merge" unique-key="UK_composedAssociation" foreign-key="FK_TEST_AllAttributesPersistent_composedAssociation"/>
		<component name="embeddedAssociation">
			<parent name="parent" />
			<many-to-one name="aggregatedAssociation" entity-name="testAllAttributesPersistent" column="embedded_aggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_AllAttributesPersistent_aggregatedAssociation"/>
			<many-to-one name="composedAssociation" entity-name="testAllAttributesPersistent" column="embedded_composedAssociation_id" unique="true" cascade="persist,save-update,refresh,delete-orphan,merge" unique-key="UK_composedAssociation" foreign-key="FK_TEST_AllAttributesPersistent_composedAssociation"/>
			<property name="booleanFlag" column="embedded_booleanFlag" />
			<bag name="aggregatedCollection" table="TEST_AllAttributesPersistent_aggregatedCollection" cascade="persist,save-update,refresh,merge">
				<key column="owner_id" foreign-key="FK_TEST_AllAttributesPersistent_aggregatedCollection_owner_id" />
				<many-to-many entity-name="testAllAttributesPersistent" foreign-key="FK_TEST_AllAttributesPersistent_aggregatedCollection_element_id" column="element_id" />
			</bag>
			<property name="colour" column="embedded_colour" />
			<property name="date" type="DateOnly" column="embedded_date" />
			<property name="dateTime" type="DateTime" column="embedded_dateTime" />
			<property name="decimal10" type="Decimal10" precision="28" scale="10" column="embedded_decimal10" />
			<property name="decimal2" type="Decimal2" precision="20" scale="2" column="embedded_decimal2" />
			<property name="decimal5" type="Decimal5" precision="23" scale="5" column="embedded_decimal5" />
			<property name="enum3" length="5" column="embedded_enum3">
				<type name="Enum">
					<param name="enumClass">modules.test.domain.AllAttributesEmbedded$Enum3</param>
				</type>
			</property>
			<property name="geometry" column="embedded_geometry" />
			<property name="id" length="36" column="embedded_id" />
			<property name="normalInteger" column="embedded_normalInteger" />
			<property name="longInteger" column="embedded_longInteger" />
			<property name="markup" type="text" column="embedded_markup" />
			<property name="memo" type="text" column="embedded_memo" />
			<property name="text" length="255" column="embedded_text" />
			<property name="time" type="TimeOnly" column="embedded_time" />
			<property name="timestamp" type="Timestamp" column="embedded_timestamp" />
		</component>
		<property name="booleanFlag" />
		<bag name="aggregatedCollection" table="TEST_AllAttributesPersistent_aggregatedCollection" cascade="persist,save-update,refresh,merge">
			<key column="owner_id" foreign-key="FK_TEST_AllAttributesPersistent_aggregatedCollection_owner_id" />
			<many-to-many entity-name="testAllAttributesPersistent" foreign-key="FK_TEST_AllAttributesPersistent_aggregatedCollection_element_id" column="element_id" />
		</bag>
		<bag name="composedCollection" table="TEST_AllAttributesPersistent_composedCollection" cascade="all-delete-orphan">
			<key column="owner_id" foreign-key="FK_TEST_AllAttributesPersistent_composedCollection_owner_id" />
			<many-to-many entity-name="testAllAttributesPersistent" foreign-key="FK_TEST_AllAttributesPersistent_composedCollection_element_id" column="element_id" />
		</bag>
		<property name="colour" />
		<property name="date" type="DateOnly" />
		<property name="dateTime" type="DateTime" />
		<property name="decimal10" type="Decimal10" precision="28" scale="10" />
		<property name="decimal2" type="Decimal2" precision="20" scale="2" />
		<property name="decimal5" type="Decimal5" precision="23" scale="5" />
		<property name="enum3" length="5">
			<type name="Enum">
				<param name="enumClass">modules.test.domain.AllAttributesPersistent$Enum3</param>
			</type>
		</property>
		<property name="geometry" />
		<property name="id" length="36" />
		<property name="normalInteger" />
		<bag name="inverseAggregatedAssociation" inverse="true">
			<key column="aggregatedAssociation_id" />
			<one-to-many entity-name="testAllAttributesPersistent" />
		</bag>
		<property name="longInteger" />
		<property name="markup" type="text" />
		<property name="memo" type="text" />
		<property name="text" length="255" />
		<property name="time" type="TimeOnly" />
		<property name="timestamp" type="Timestamp" />
		<filter name="testAllAttributesPersistentNoneFilter" condition="1=0"/>
		<filter name="testAllAttributesPersistentCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testAllAttributesPersistentDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testAllAttributesPersistentUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.AllAttributesRequiredPersistent" table="TEST_AllAttributesRequiredPersistent" entity-name="testAllAttributesRequiredPersistent">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<many-to-one name="aggregatedAssociation" entity-name="testAllAttributesRequiredPersistent" column="aggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_AllAttributesRequiredPersistent_aggregatedAssociation"/>
		<property name="booleanFlag" />
		<bag name="aggregatedCollection" table="TEST_AllAttributesRequiredPersistent_aggregatedCollection" cascade="persist,save-update,refresh,merge">
			<key column="owner_id" foreign-key="FK_TEST_AllAttributesRequiredPersistent_aggregatedCollection_owner_id" />
			<many-to-many entity-name="testAllAttributesRequiredPersistent" foreign-key="FK_TEST_AllAttributesRequiredPersistent_aggregatedCollection_element_id" column="element_id" />
		</bag>
		<property name="colour" />
		<property name="date" type="DateOnly" />
		<property name="dateTime" type="DateTime" />
		<property name="decimal10" type="Decimal10" precision="28" scale="10" />
		<property name="decimal2" type="Decimal2" precision="20" scale="2" />
		<property name="decimal5" type="Decimal5" precision="23" scale="5" />
		<property name="enum3" length="5">
			<type name="Enum">
				<param name="enumClass">modules.test.domain.AllAttributesRequiredPersistent$Enum3</param>
			</type>
		</property>
		<property name="geometry" />
		<property name="id" length="36" />
		<property name="normalInteger" />
		<bag name="inverseAggregatedAssociation" inverse="true">
			<key column="aggregatedAssociation_id" />
			<one-to-many entity-name="testAllAttributesRequiredPersistent" />
		</bag>
		<property name="longInteger" />
		<property name="markup" type="text" />
		<property name="memo" type="text" />
		<property name="text" length="255" />
		<property name="time" type="TimeOnly" />
		<property name="timestamp" type="Timestamp" />
		<filter name="testAllAttributesRequiredPersistentNoneFilter" condition="1=0"/>
		<filter name="testAllAttributesRequiredPersistentCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testAllAttributesRequiredPersistentDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testAllAttributesRequiredPersistentUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.AllDynamicAttributesPersistent" table="TEST_AllDynamicAttributesPersistent" entity-name="testAllDynamicAttributesPersistent">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<many-to-one name="aggregatedAssociation" entity-name="testAllDynamicAttributesPersistent" column="aggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_AllDynamicAttributesPersistent_aggregatedAssociation"/>
		<many-to-one name="composedAssociation" entity-name="testAllDynamicAttributesPersistent" column="composedAssociation_id" unique="true" cascade="persist,save-update,refresh,delete-orphan,merge" unique-key="UK_composedAssociation" foreign-key="FK_TEST_AllDynamicAttributesPersistent_composedAssociation"/>
		<component name="embeddedAssociation">
			<many-to-one name="aggregatedAssociation" entity-name="testAllAttributesPersistent" column="embedded_aggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_AllDynamicAttributesPersistent_aggregatedAssociation"/>
			<many-to-one name="composedAssociation" entity-name="testAllAttributesPersistent" column="embedded_composedAssociation_id" unique="true" cascade="persist,save-update,refresh,delete-orphan,merge" unique-key="UK_composedAssociation" foreign-key="FK_TEST_AllDynamicAttributesPersistent_composedAssociation"/>
			<property name="booleanFlag" column="embedded_booleanFlag" />
			<bag name="aggregatedCollection" table="TEST_AllDynamicAttributesPersistent_aggregatedCollection" cascade="persist,save-update,refresh,merge">
				<key column="owner_id" foreign-key="FK_TEST_AllDynamicAttributesPersistent_aggregatedCollection_owner_id" />
				<many-to-many entity-name="testAllAttributesPersistent" foreign-key="FK_TEST_AllDynamicAttributesPersistent_aggregatedCollection_element_id" column="element_id" />
			</bag>
			<property name="colour" column="embedded_colour" />
			<property name="date" type="DateOnly" column="embedded_date" />
			<property name="dateTime" type="DateTime" column="embedded_dateTime" />
			<property name="decimal10" type="Decimal10" precision="28" scale="10" column="embedded_decimal10" />
			<property name="decimal2" type="Decimal2" precision="20" scale="2" column="embedded_decimal2" />
			<property name="decimal5" type="Decimal5" precision="23" scale="5" column="embedded_decimal5" />
			<property name="enum3" length="5" column="embedded_enum3">
				<type name="Enum">
					<param name="enumClass">modules.test.domain.AllAttributesEmbedded$Enum3</param>
				</type>
			</property>
			<property name="geometry" column="embedded_geometry" />
			<property name="id" length="36" column="embedded_id" />
			<property name="normalInteger" column="embedded_normalInteger" />
			<property name="longInteger" column="embedded_longInteger" />
			<property name="markup" type="text" column="embedded_markup" />
			<property name="memo" type="text" column="embedded_memo" />
			<property name="text" length="255" column="embedded_text" />
			<property name="time" type="TimeOnly" column="embedded_time" />
			<property name="timestamp" type="Timestamp" column="embedded_timestamp" />
		</component>
		<bag name="composedCollection" table="TEST_AllDynamicAttributesPersistent_composedCollection" cascade="all-delete-orphan">
			<key column="owner_id" foreign-key="FK_TEST_AllDynamicAttributesPersistent_composedCollection_owner_id" />
			<many-to-many entity-name="testAllDynamicAttributesPersistent" foreign-key="FK_TEST_AllDynamicAttributesPersistent_composedCollection_element_id" column="element_id" />
		</bag>
		<bag name="inverseAggregatedAssociation" inverse="true">
			<key column="aggregatedAssociation_id" />
			<one-to-many entity-name="testAllDynamicAttributesPersistent" />
		</bag>
		<filter name="testAllDynamicAttributesPersistentNoneFilter" condition="1=0"/>
		<filter name="testAllDynamicAttributesPersistentCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testAllDynamicAttributesPersistentDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testAllDynamicAttributesPersistentUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

		<class name="modules.test.domain.AnyDerived1" table="TEST_AnyDerived1" entity-name="testAnyDerived1">
			<id name="bizId" length="36" />
			<version name="bizVersion" unsaved-value="null" />
			<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
			<property name="bizKey" length="1024" not-null="true" />
			<property name="bizCustomer" length="50" not-null="true" />
			<property name="bizFlagComment" length="1024" />
			<property name="bizDataGroupId" length="36" />
			<property name="bizUserId" length="36" not-null="true" />
			<property name="text" length="20" />
			<property name="text1" length="20" />
			<filter name="testAnyDerived1NoneFilter" condition="1=0"/>
			<filter name="testAnyDerived1CustomerFilter" condition="bizCustomer=:customerParam"/>
			<filter name="testAnyDerived1DataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
			<filter name="testAnyDerived1UserIdFilter" condition="bizUserId=:userIdParam"/>
		</class>

		<class name="modules.test.domain.AnyDerived2" table="TEST_AnyDerived2" entity-name="testAnyDerived2">
			<id name="bizId" length="36" />
			<version name="bizVersion" unsaved-value="null" />
			<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
			<property name="bizKey" length="1024" not-null="true" />
			<property name="bizCustomer" length="50" not-null="true" />
			<property name="bizFlagComment" length="1024" />
			<property name="bizDataGroupId" length="36" />
			<property name="bizUserId" length="36" not-null="true" />
			<property name="text" length="20" />
			<property name="text2" length="20" />
			<filter name="testAnyDerived2NoneFilter" condition="1=0"/>
			<filter name="testAnyDerived2CustomerFilter" condition="bizCustomer=:customerParam"/>
			<filter name="testAnyDerived2DataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
			<filter name="testAnyDerived2UserIdFilter" condition="bizUserId=:userIdParam"/>
		</class>

	<class name="modules.test.domain.ArcOneToMany" table="TEST_ArcOneToMany" entity-name="testArcOneToMany">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<bag name="arcs" table="TEST_ArcOneToMany_arcs" cascade="persist,save-update,refresh,merge">
			<key column="owner_id" foreign-key="FK_TEST_ArcOneToMany_arcs_owner_id" />
		<many-to-any meta-type="string" id-type="string">
			<meta-value value="test.AnyDerived1" class="testAnyDerived1" />
			<meta-value value="test.AnyDerived2" class="testAnyDerived2" />
			<column name="arcs_type" index="IDX_element_id" />
			<column name="arcs_id" length="36" index="IDX_element_id" />
		</many-to-any>
		</bag>
		<filter name="testArcOneToManyNoneFilter" condition="1=0"/>
		<filter name="testArcOneToManyCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testArcOneToManyDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testArcOneToManyUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.ArcOneToOne" table="TEST_ArcOneToOne" entity-name="testArcOneToOne">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<any name="arc" meta-type="string" id-type="string">
			<meta-value value="test.AnyDerived1" class="testAnyDerived1" />
			<meta-value value="test.AnyDerived2" class="testAnyDerived2" />
			<column name="arc_type" index="IDX_arc" />
			<column name="arc_id" length="36" index="IDX_arc" />
		</any>
		<filter name="testArcOneToOneNoneFilter" condition="1=0"/>
		<filter name="testArcOneToOneCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testArcOneToOneDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testArcOneToOneUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.DeleteDuringPostDelete" table="TEST_DeleteDuringPostDelete" entity-name="testDeleteDuringPostDelete">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<many-to-one name="aggregatedAssociation" entity-name="testAllAttributesPersistent" column="aggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_DeleteDuringPostDelete_aggregatedAssociation"/>
		<filter name="testDeleteDuringPostDeleteNoneFilter" condition="1=0"/>
		<filter name="testDeleteDuringPostDeleteCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testDeleteDuringPostDeleteDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testDeleteDuringPostDeleteUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.Hierarchical" table="TEST_Hierarchical" entity-name="testHierarchical">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<property name="bizParentId" length="36" />
		<property name="text" length="20" />
		<filter name="testHierarchicalNoneFilter" condition="1=0"/>
		<filter name="testHierarchicalCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testHierarchicalDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testHierarchicalUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.InjectedDocument.InjectedDocumentExtension" table="TEST_InjectedDocument" entity-name="testInjectedDocument">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<property name="text" length="255" />
		<filter name="testInjectedDocumentNoneFilter" condition="1=0"/>
		<filter name="testInjectedDocumentCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testInjectedDocumentDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testInjectedDocumentUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.InverseManyToManyPersistent" table="TEST_InverseManyToManyPersistent" entity-name="testInverseManyToManyPersistent">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<bag name="aggCollection" table="TEST_InverseManyToManyPersistent_aggCollection" cascade="persist,save-update,refresh,merge">
			<key column="owner_id" foreign-key="FK_TEST_InverseManyToManyPersistent_aggCollection_owner_id" />
			<many-to-many entity-name="testInverseManyToManyPersistent" foreign-key="FK_TEST_InverseManyToManyPersistent_aggCollection_element_id" column="element_id" />
		</bag>
		<bag name="invAggCollection" table="TEST_InverseManyToManyPersistent_aggCollection" inverse="true">
			<key column="element_id" />
			<many-to-many entity-name="testInverseManyToManyPersistent" column="owner_id" />
		</bag>
		<filter name="testInverseManyToManyPersistentNoneFilter" condition="1=0"/>
		<filter name="testInverseManyToManyPersistentCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testInverseManyToManyPersistentDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testInverseManyToManyPersistentUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.InverseOneToManyPersistent" table="TEST_InverseOneToManyPersistent" entity-name="testInverseOneToManyPersistent">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<many-to-one name="aggAssociation" entity-name="testInverseOneToManyPersistent" column="aggAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_InverseOneToManyPersistent_aggAssociation"/>
		<bag name="invAggAssociation" inverse="true">
			<key column="aggAssociation_id" />
			<one-to-many entity-name="testInverseOneToManyPersistent" />
		</bag>
		<filter name="testInverseOneToManyPersistentNoneFilter" condition="1=0"/>
		<filter name="testInverseOneToManyPersistentCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testInverseOneToManyPersistentDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testInverseOneToManyPersistentUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.InverseOneToOnePersistent" table="TEST_InverseOneToOnePersistent" entity-name="testInverseOneToOnePersistent">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<many-to-one name="aggAssociation" entity-name="testInverseOneToOnePersistent" column="aggAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_InverseOneToOnePersistent_aggAssociation"/>
		<one-to-one name="invAggAssociation" entity-name="testInverseOneToOnePersistent" property-ref="aggAssociation" />
		<filter name="testInverseOneToOnePersistentNoneFilter" condition="1=0"/>
		<filter name="testInverseOneToOnePersistentCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testInverseOneToOnePersistentDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testInverseOneToOnePersistentUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

		<class name="modules.test.MappedExtensionSingleStrategy.MappedExtensionSingleStrategyExtension" table="TEST_MappedExtensionSingleStrategy" discriminator-value="ME" entity-name="testMappedExtensionSingleStrategy">
			<id name="bizId" length="36" />
			<discriminator column="bizDiscriminator" type="string" />
			<version name="bizVersion" unsaved-value="null" />
			<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
			<property name="bizKey" length="1024" not-null="true" />
			<property name="bizCustomer" length="50" not-null="true" />
			<property name="bizFlagComment" length="1024" />
			<property name="bizDataGroupId" length="36" />
			<property name="bizUserId" length="36" not-null="true" />
			<property name="booleanFlag" />
			<property name="colour" />
			<property name="dateOnly" type="DateOnly" />
			<property name="dateTime" type="DateTime" />
			<property name="decimal10" type="Decimal10" precision="28" scale="10" />
			<property name="decimal2" type="Decimal2" precision="20" scale="2" />
			<property name="decimal5" type="Decimal5" precision="23" scale="5" />
			<property name="enum3" length="5">
				<type name="Enum">
					<param name="enumClass">modules.test.domain.MappedBase$Enum3</param>
				</type>
			</property>
			<property name="geometry" />
			<property name="id" length="36" />
			<property name="normalInteger" />
			<property name="longInteger" />
			<property name="markup" type="text" />
			<property name="memo" type="text" />
			<property name="text" length="255" />
			<property name="timeOnly" type="TimeOnly" />
			<property name="timestampAttribute" type="Timestamp" />
			<many-to-one name="composedAssociation" entity-name="testMappedExtensionSingleStrategy" column="composedAssociation_id" unique="true" cascade="persist,save-update,refresh,delete-orphan,merge" unique-key="UK_composedAssociation" foreign-key="FK_TEST_MappedExtensionSingleStrategy_composedAssociation"/>
			<many-to-one name="aggregatedAssociation" entity-name="testMappedExtensionSingleStrategy" column="aggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_MappedExtensionSingleStrategy_aggregatedAssociation"/>
			<bag name="aggregatedCollection" table="TEST_MappedExtensionSingleStrategy_aggregatedCollection" cascade="persist,save-update,refresh,merge">
				<key column="owner_id" foreign-key="FK_TEST_MappedExtensionSingleStrategy_aggregatedCollection_owner_id" />
				<many-to-many entity-name="testMappedExtensionSingleStrategy" foreign-key="FK_TEST_MappedExtensionSingleStrategy_aggregatedCollection_element_id" column="element_id" />
			</bag>
			<bag name="composedCollection" table="TEST_MappedExtensionSingleStrategy_composedCollection" cascade="all-delete-orphan">
				<key column="owner_id" foreign-key="FK_TEST_MappedExtensionSingleStrategy_composedCollection_owner_id" />
				<many-to-many entity-name="testMappedExtensionSingleStrategy" foreign-key="FK_TEST_MappedExtensionSingleStrategy_composedCollection_element_id" column="element_id" />
			</bag>
			<bag name="inverseAggregatedAssociation" inverse="true">
				<key column="aggregatedAssociation_id" />
				<one-to-many entity-name="testMappedExtensionSingleStrategy" />
			</bag>
			<subclass name="modules.test.domain.MappedSubclassedSingleStrategy" discriminator-value="MSA" entity-name="testMappedSubclassedSingleStrategy">
				<property name="subclassInteger" />
			</subclass>
			<filter name="testMappedExtensionSingleStrategyNoneFilter" condition="1=0"/>
			<filter name="testMappedExtensionSingleStrategyCustomerFilter" condition="bizCustomer=:customerParam"/>
			<filter name="testMappedExtensionSingleStrategyDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
			<filter name="testMappedExtensionSingleStrategyUserIdFilter" condition="bizUserId=:userIdParam"/>
		</class>

		<class name="modules.test.MappedExtensionJoinedStrategy.MappedExtensionJoinedStrategyExtension" table="TEST_MappedExtensionJoinedStrategy" entity-name="testMappedExtensionJoinedStrategy">
			<id name="bizId" length="36" />
			<version name="bizVersion" unsaved-value="null" />
			<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
			<property name="bizKey" length="1024" not-null="true" />
			<property name="bizCustomer" length="50" not-null="true" />
			<property name="bizFlagComment" length="1024" />
			<property name="bizDataGroupId" length="36" />
			<property name="bizUserId" length="36" not-null="true" />
			<property name="booleanFlag" />
			<property name="colour" />
			<property name="dateOnly" type="DateOnly" />
			<property name="dateTime" type="DateTime" />
			<property name="decimal10" type="Decimal10" precision="28" scale="10" />
			<property name="decimal2" type="Decimal2" precision="20" scale="2" />
			<property name="decimal5" type="Decimal5" precision="23" scale="5" />
			<property name="enum3" length="5">
				<type name="Enum">
					<param name="enumClass">modules.test.domain.MappedBase$Enum3</param>
				</type>
			</property>
			<property name="geometry" />
			<property name="id" length="36" />
			<property name="normalInteger" />
			<property name="longInteger" />
			<property name="markup" type="text" />
			<property name="memo" type="text" />
			<property name="text" length="255" />
			<property name="timeOnly" type="TimeOnly" />
			<property name="timestampAttribute" type="Timestamp" />
			<many-to-one name="composedAssociation" entity-name="testMappedExtensionSingleStrategy" column="composedAssociation_id" unique="true" cascade="persist,save-update,refresh,delete-orphan,merge" unique-key="UK_composedAssociation" foreign-key="FK_TEST_MappedExtensionJoinedStrategy_composedAssociation"/>
			<many-to-one name="aggregatedAssociation" entity-name="testMappedExtensionJoinedStrategy" column="aggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_MappedExtensionJoinedStrategy_aggregatedAssociation"/>
			<bag name="aggregatedCollection" table="TEST_MappedExtensionJoinedStrategy_aggregatedCollection" cascade="persist,save-update,refresh,merge">
				<key column="owner_id" foreign-key="FK_TEST_MappedExtensionJoinedStrategy_aggregatedCollection_owner_id" />
				<many-to-many entity-name="testMappedExtensionJoinedStrategy" foreign-key="FK_TEST_MappedExtensionJoinedStrategy_aggregatedCollection_element_id" column="element_id" />
			</bag>
			<bag name="composedCollection" table="TEST_MappedExtensionJoinedStrategy_composedCollection" cascade="all-delete-orphan">
				<key column="owner_id" foreign-key="FK_TEST_MappedExtensionJoinedStrategy_composedCollection_owner_id" />
				<many-to-many entity-name="testMappedExtensionJoinedStrategy" foreign-key="FK_TEST_MappedExtensionJoinedStrategy_composedCollection_element_id" column="element_id" />
			</bag>
			<bag name="inverseAggregatedAssociation" inverse="true">
				<key column="aggregatedAssociation_id" />
				<one-to-many entity-name="testMappedExtensionJoinedStrategy" />
			</bag>
			<joined-subclass name="modules.test.domain.MappedSubclassedJoinedStrategy" table="TEST_MappedSubclassedJoinedStrategy" entity-name="testMappedSubclassedJoinedStrategy">
				<key column="bizId" />
				<property name="subclassInteger" />
			</joined-subclass>
			<filter name="testMappedExtensionJoinedStrategyNoneFilter" condition="1=0"/>
			<filter name="testMappedExtensionJoinedStrategyCustomerFilter" condition="bizCustomer=:customerParam"/>
			<filter name="testMappedExtensionJoinedStrategyDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
			<filter name="testMappedExtensionJoinedStrategyUserIdFilter" condition="bizUserId=:userIdParam"/>
		</class>

	<class name="modules.test.domain.Reachability" table="TEST_NonPersistentAssociationToPersistent" entity-name="testReachability">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<property name="text" length="255" />
		<many-to-one name="persistentAggregatedAssociation" entity-name="testAllAttributesPersistent" column="persistentAggregatedAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_NonPersistentAssociationToPersistent_persistentAggregatedAssociation"/>
		<bag name="persistentAggregatedCollection" table="TEST_NonPersistentAssociationToPersistent_persistentAggregatedCollection" cascade="persist,save-update,refresh,merge">
			<key column="owner_id" foreign-key="FK_TEST_NonPersistentAssociationToPersistent_persistentAggregatedCollection_owner_id" />
			<many-to-many entity-name="testAllAttributesPersistent" foreign-key="FK_TEST_NonPersistentAssociationToPersistent_persistentAggregatedCollection_element_id" column="element_id" />
		</bag>
		<many-to-one name="persistentComposedAssociation" entity-name="testAllAttributesPersistent" column="persistentComposedAssociation_id" unique="true" cascade="persist,save-update,refresh,delete-orphan,merge" unique-key="UK_persistentComposedAssociation" foreign-key="FK_TEST_NonPersistentAssociationToPersistent_persistentComposedAssociation"/>
		<bag name="persistentComposedCollection" table="TEST_NonPersistentAssociationToPersistent_persistentComposedCollection" cascade="all-delete-orphan">
			<key column="owner_id" foreign-key="FK_TEST_NonPersistentAssociationToPersistent_persistentComposedCollection_owner_id" />
			<many-to-many entity-name="testAllAttributesPersistent" foreign-key="FK_TEST_NonPersistentAssociationToPersistent_persistentComposedCollection_element_id" column="element_id" />
		</bag>
		<filter name="testReachabilityNoneFilter" condition="1=0"/>
		<filter name="testReachabilityCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testReachabilityDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testReachabilityUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.UniqueConstraintNonNullable" table="TEST_UniqueConstraintNonNullable" entity-name="testUniqueConstraintNonNullable">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<property name="booleanFlag" />
		<property name="enum3" length="5">
			<type name="Enum">
				<param name="enumClass">modules.test.domain.UniqueConstraintNonNullable$Enum3</param>
			</type>
		</property>
		<property name="text" length="255" />
		<filter name="testUniqueConstraintNonNullableNoneFilter" condition="1=0"/>
		<filter name="testUniqueConstraintNonNullableCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testUniqueConstraintNonNullableDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testUniqueConstraintNonNullableUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.UniqueConstraintNullable" table="TEST_UniqueConstraintNonNullable" entity-name="testUniqueConstraintNullable">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<property name="booleanFlag" />
		<property name="enum3" length="5">
			<type name="Enum">
				<param name="enumClass">modules.test.domain.UniqueConstraintNullable$Enum3</param>
			</type>
		</property>
		<property name="text" length="255" />
		<filter name="testUniqueConstraintNullableNoneFilter" condition="1=0"/>
		<filter name="testUniqueConstraintNullableCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testUniqueConstraintNullableDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testUniqueConstraintNullableUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<class name="modules.test.domain.UniqueConstraintOptimisation" table="TEST_UniqueConstraintOptimisation" entity-name="testUniqueConstraintOptimisation">
		<id name="bizId" length="36" />
		<version name="bizVersion" unsaved-value="null" />
		<property name="bizLock" type="OptimisticLock" length="271" not-null="true" />
		<property name="bizKey" length="1024" not-null="true" />
		<property name="bizCustomer" length="50" not-null="true" />
		<property name="bizFlagComment" length="1024" />
		<property name="bizDataGroupId" length="36" />
		<property name="bizUserId" length="36" not-null="true" />
		<property name="uc1" length="1" />
		<property name="uc2" length="1" />
		<property name="uc3" length="1" />
		<many-to-one name="persistentAssociation" entity-name="testUniqueConstraintOptimisation" column="persistentAssociation_id" cascade="persist,save-update,refresh,merge" foreign-key="FK_TEST_UniqueConstraintOptimisation_persistentAssociation"/>
		<filter name="testUniqueConstraintOptimisationNoneFilter" condition="1=0"/>
		<filter name="testUniqueConstraintOptimisationCustomerFilter" condition="bizCustomer=:customerParam"/>
		<filter name="testUniqueConstraintOptimisationDataGroupIdFilter" condition="bizDataGroupId=:dataGroupIdParam"/>
		<filter name="testUniqueConstraintOptimisationUserIdFilter" condition="bizUserId=:userIdParam"/>
	</class>

	<filter-def name="testAllAttributesPersistentNoneFilter" />
	<filter-def name="testAllAttributesPersistentCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testAllAttributesPersistentDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAllAttributesPersistentUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAllAttributesRequiredPersistentNoneFilter" />
	<filter-def name="testAllAttributesRequiredPersistentCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testAllAttributesRequiredPersistentDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAllAttributesRequiredPersistentUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAllDynamicAttributesPersistentNoneFilter" />
	<filter-def name="testAllDynamicAttributesPersistentCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testAllDynamicAttributesPersistentDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAllDynamicAttributesPersistentUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAnyDerived1NoneFilter" />
	<filter-def name="testAnyDerived1CustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testAnyDerived1DataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAnyDerived1UserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAnyDerived2NoneFilter" />
	<filter-def name="testAnyDerived2CustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testAnyDerived2DataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testAnyDerived2UserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testArcOneToManyNoneFilter" />
	<filter-def name="testArcOneToManyCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testArcOneToManyDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testArcOneToManyUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testArcOneToOneNoneFilter" />
	<filter-def name="testArcOneToOneCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testArcOneToOneDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testArcOneToOneUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testDeleteDuringPostDeleteNoneFilter" />
	<filter-def name="testDeleteDuringPostDeleteCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testDeleteDuringPostDeleteDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testDeleteDuringPostDeleteUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testHierarchicalNoneFilter" />
	<filter-def name="testHierarchicalCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testHierarchicalDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testHierarchicalUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testInjectedDocumentNoneFilter" />
	<filter-def name="testInjectedDocumentCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testInjectedDocumentDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testInjectedDocumentUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseManyToManyPersistentNoneFilter" />
	<filter-def name="testInverseManyToManyPersistentCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseManyToManyPersistentDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseManyToManyPersistentUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseOneToManyPersistentNoneFilter" />
	<filter-def name="testInverseOneToManyPersistentCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseOneToManyPersistentDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseOneToManyPersistentUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseOneToOnePersistentNoneFilter" />
	<filter-def name="testInverseOneToOnePersistentCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseOneToOnePersistentDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testInverseOneToOnePersistentUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testMappedExtensionSingleStrategyNoneFilter" />
	<filter-def name="testMappedExtensionSingleStrategyCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testMappedExtensionSingleStrategyDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testMappedExtensionSingleStrategyUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testMappedExtensionJoinedStrategyNoneFilter" />
	<filter-def name="testMappedExtensionJoinedStrategyCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testMappedExtensionJoinedStrategyDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testMappedExtensionJoinedStrategyUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testReachabilityNoneFilter" />
	<filter-def name="testReachabilityCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testReachabilityDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testReachabilityUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintNonNullableNoneFilter" />
	<filter-def name="testUniqueConstraintNonNullableCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintNonNullableDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintNonNullableUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintNullableNoneFilter" />
	<filter-def name="testUniqueConstraintNullableCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintNullableDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintNullableUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintOptimisationNoneFilter" />
	<filter-def name="testUniqueConstraintOptimisationCustomerFilter">
		<filter-param name="customerParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintOptimisationDataGroupIdFilter">
		<filter-param name="dataGroupIdParam" type="string"/>
	</filter-def>
	<filter-def name="testUniqueConstraintOptimisationUserIdFilter">
		<filter-param name="userIdParam" type="string"/>
	</filter-def>
</hibernate-mapping>