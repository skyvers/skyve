 <project xmlns="http://maven.apache.org/POM/4.0.0"
		    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.skyve</groupId>
		<artifactId>skyve-parent</artifactId>
		<version>9.0.0-SNAPSHOT</version>
	</parent>
	<artifactId>skyve-ee</artifactId>

	<properties>
		<javaee-path>${basedir}/javaee</javaee-path>
		<ear-path>${javaee-path}/skyve.ear</ear-path>
		<war-path>${ear-path}/skyve.war</war-path>
	</properties>

 	<build>
 		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.6.0</version>
				<executions>
<!--
					<execution>
						<id>copy-ear-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<overWriteIfNewer>true</overWriteIfNewer>
							<outputDirectory>${ear-path}/lib/</outputDirectory>
							<includeScope>runtime</includeScope>
						</configuration>
					</execution>
					<execution>
						<id>copy-test-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<overWriteIfNewer>true</overWriteIfNewer>
							<outputDirectory>${basedir}/lib/</outputDirectory>
							<includeScope>test</includeScope>
						</configuration>
					</execution>
-->
<!-- Use this to make the web app
					<execution>
						<id>unpack</id>
						<phase>package</phase>
						<goals>
							<goal>unpack</goal>
						</goals>
						<configuration>
							<artifactItems>
								<artifactItem>
									<groupId>org.skyve</groupId>
									<artifactId>skyve-web</artifactId>
									<version>${skyve.version}</version>
									<type>jar</type>
									<overWrite>true</overWrite>
									<outputDirectory>target/testical</outputDirectory>
								</artifactItem>
							</artifactItems>

							<overWriteIfNewer>true</overWriteIfNewer>
							<outputDirectory>target/unpacked/</outputDirectory>
						</configuration>
					</execution>
-->
				</executions>
			</plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <!-- Generate javadoc package HTMLs: mvn exec:java@generate-javadoc-package-htmls -->
                        <id>generate-javadoc-package-htmls</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>org.skyve.impl.tools.javadoc.doctor.DoctorUtil</mainClass>
                            <arguments>
                                <argument>src/main/java/</argument> <!-- source path -->
                                <argument>bizhub</argument>            <!-- customerName -->
                                <!-- list all modules as arguments here -->
                                <argument>admin</argument>
                            </arguments>
                            <includePluginDependencies>true</includePluginDependencies>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>org.skyve</groupId>
                        <artifactId>skyve-tools</artifactId>
                        <version>${skyve.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<executions>
<!--
					<execution>
						<id>clear-all-dependencies</id>
						<phase>prepare-package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete dir="${ear-path}/lib" />
								<delete dir="${war-path}/WEB-INF/lib" />
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>move-web-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<move todir="${war-path}/WEB-INF/lib" failonerror="true">
									<fileset dir="${ear-path}/lib"
												includes="all-themes-*.jar,commons-fileupload-*.jar,gson-*.jar,primefaces-*.jar,primefaces-extensions-*.jar,omnifaces-*.jar,skyve-web-*.jar" />
								</move>
								<move file="${ear-path}/lib/skyve-core-${project.parent.version}.jar" tofile="${ear-path}/lib/skyve-core.jar" />
								<move file="${ear-path}/lib/skyve-ext-${project.parent.version}.jar" tofile="${ear-path}/lib/skyve-ext.jar" />
								<delete file="${ear-path}/lib/skyve-ee-${project.parent.version}.jar" />
								<move file="${war-path}/WEB-INF/lib/skyve-web-${project.parent.version}.jar" tofile="${war-path}/WEB-INF/lib/skyve-web.jar" />
							</tasks>
						</configuration>
					</execution>
-->
					<!-- Touch: mvn antrun:run@touch -->
					<execution>
						<id>touch</id>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete file="${javaee-path}/*.failed" />
								<touch file="${ear-path}.dodeploy" />
							</tasks>
						</configuration>
					</execution>
					<!-- Generate Domain: mvn antrun:run@generate-domain -->
					<execution>
						<id>generate-domain</id>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<java fork="true" classname="org.skyve.impl.generate.DomainGenerator">
									<classpath>
										<fileset dir="${ear-path}/lib">
											<include name="**/*.jar"/>
										</fileset>
										<fileset dir="bin">
											<include name="**/*.class"/>
										</fileset>
										<!-- don't use a file element here - doesn't work in old ant -->
										<pathelement path="${ear-path}/apps.jar/" />
										<!-- add the test classes to the classpath for generated tests -->
										<pathelement path="bin/" />
									</classpath>
									<arg value="src/skyve/" /> <!-- source path -->
									<arg value="src/generated/" /> <!-- generated path -->
									<arg value="src/test/" /> <!-- test path -->
									<arg value="src/generatedTest/" /> <!-- generated test path -->
									<arg value="true" /> <!-- debug -->
									<arg value="H2_NO_INDEXES" /> <!-- dialect options -->
									<arg value="test,whosin,whosinintegrate" /> <!-- excluded modules -->
								</java>
							</tasks>
						</configuration>
					</execution>
					<execution>
						<id>generate-javadoc</id>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<path id="classpath">
									<fileset dir="lib">
										<include name="**/*.jar"/>
									</fileset>
									<fileset dir="tools/lib">
										<include name="**/*.jar"/>
									</fileset>
									<fileset dir="${ear-path}/lib">
										<include name="**/*.jar"/>
									</fileset>
									<fileset dir="${war-path}/WEB-INF/lib">
										<include name="**/*.jar"/>
									</fileset>
									<!-- don't use a file element here - doesn't work in old ant -->
									<pathelement path="${ear-path}/apps.jar/" />
									<!-- add the test classes to the classpath for generated tests -->
									<pathelement path="bin/" />
								</path>
								<java fork="true" classname="org.skyve.impl.tools.javadoc.doctor.DoctorUtil">
									<classpath refid="classpath"/>
									<arg value="src/skyve/" /> <!-- source path -->
									<arg value="bizhub" /> <!-- customerName -->
									<!-- list all modules as arguments here -->
									<arg value="admin" />
								</java>
						        <javadoc sourcepath="src/skyve" packagenames="modules.*.domain" destdir="../javadoc" private="true" verbose="false">
									<classpath refid="classpath"/>
						            <doclet name="org.skyve.impl.tools.javadoc.SkyveDoclet" path="tools/lib/umlgraph-5.6.6.jar:tools/lib/skyve-tools.jar">
						                    <param name="-hide" value="org.skyve.*|java.*|org.skyve.impl.*"/>

						            		<param name="-nodefontsize" value="9"/>
						                    <param name="-nodefontpackagesize" value="7"/>
						                    <param name="-link" value="http://docs.oracle.com/javase/1.5.0/docs/guide/javadoc/doclet/spec/"/>
						                    <param name="-link" value="http://docs.oracle.com/javase/8/docs/api/"/>
						            </doclet>
						        </javadoc>
								<delete dir="src/skyve" includes="**/package.html" />
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- Create javadoc (run after mvn exec:java@generate-javadoc-package-htmls)
					mvn javadoc:javadoc -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>3.5.0</version>
                <configuration>
                	<show>private</show>
                    <doclet>org.umlgraph.doclet.UmlGraphDoc</doclet>
                    <docletArtifact>
                        <groupId>org.umlgraph</groupId>
                        <artifactId>umlgraph</artifactId>
                        <version>5.6.6</version>
                    </docletArtifact>
                    <doclint>none</doclint>
					<overview>${basedir}/src/skyve/modules/overview.html</overview>
                    <additionalOptions><additionalOption>-hide org.skyve.*|java.*|org.skyve.impl.* -link http://docs.oracle.com/javase/1.5.0/docs/guide/javadoc/doclet/spec/ -link http://docs.oracle.com/javase/8/docs/api/</additionalOption></additionalOptions>
                </configuration>
            </plugin>
 		</plugins>
 	</build>

	<dependencies>
		<dependency>
			<groupId>org.skyve</groupId>
			<artifactId>skyve-war</artifactId>
			<version>${skyve.version}</version>
			<!-- import its dependencies but don't include its jars -->
			<type>pom</type>
		</dependency>

		<!-- Test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-library</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
    		<groupId>org.jboss.weld.se</groupId>
    		<artifactId>weld-se</artifactId>
    		<scope>test</scope>
		</dependency>
		
		<!-- SAIL dependencies -->
		<dependency>
    		<groupId>org.seleniumhq.selenium</groupId>
    		<artifactId>selenium-support</artifactId>
    		<version>3.141.59</version>
    		<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-chrome-driver</artifactId>
			<version>3.141.59</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-firefox-driver</artifactId>
			<version>3.141.59</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
</project>
